version: '3.0'
services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=orders_db
    ports:
      - "5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - lab3network
    logging:
      driver: none
    deploy:
      resources:
        limits:
          cpus: '3.5'
      
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - lab3network
    logging:
      driver: none
    deploy:
      resources:
        limits:
          cpus: '3'
  
  worker1:
    build: 
      context: worker
    container_name: worker1
    networks:
      - lab3network
    depends_on:
      - rabbitmq
      - postgres
    deploy:
      resources:
        limits:
          cpus: '0.03'
         
  worker2:
    build: 
      context: worker
    container_name: worker2
    networks:
      - lab3network
    depends_on:
      - rabbitmq
      - postgres
    deploy:
      resources:
        limits:
          cpus: '0.03'
          
  worker3:
    build: 
      context: worker
    container_name: worker3
    networks:
      - lab3network
    depends_on:
      - rabbitmq
      - postgres
    deploy:
      resources:
        limits:
          cpus: '0.03'                  
  
  api1:
    build:
      context: api
    container_name: api1
    ports:
      - "8000:8000"
    networks:
      - lab3network
    depends_on:
      - rabbitmq
    deploy:
      resources:
        limits:
          cpus: '2.5'

#  api2:
#    build:
#      context: api
#    container_name: api2
#    ports:
#      - "8000"
#    networks:
#      - lab3network
#    depends_on:
#      - rabbitmq
#    deploy:
#      resources:
#        limits:
#          cpus: '1'
          
  nginx1:
    image: nginx
    container_name: nginx1
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/default.conf
      - ./nginx/load.sh:/load.sh
    depends_on:
      - api1
#      - api2
    networks:
      - lab3network
    deploy:
      resources:
        limits:
          cpus: '2'

  webpage:
    build:
      context: http-server
    container_name: webpage
    ports:
      - "8080:8080"
    networks:
      - lab3network
    depends_on:
      - nginx1
    deploy:
      resources:
        limits:
          cpus: '0.1'

volumes:
  rabbitmq_data:

networks:
  lab3network:
